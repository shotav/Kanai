plugins {
    id "java"
    id "org.openjfx.javafxplugin" version "0.0.10"
}

group myGroup
version myVersion
sourceCompatibility = myJavaVersion
targetCompatibility = myJavaVersion

repositories {
    mavenCentral()
}

jar {
    archiveFileName = project.name + ".jar"
    duplicatesStrategy = "include"
    manifest {
        attributes "Implementation-Title": project.name,
                   "Implementation-Version": project.version
    }
    from {
        configurations.compileClasspath.filter{ it.exists() }.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
 
task dist(type: Exec) {
    if (System.getProperty("os.name").toLowerCase().contains("win")) {
        commandLine "jpackage",
                "--dest", "dist",
                "--input", "build\\libs",
                "--main-jar", project.name + ".jar",
                "--name", project.name + " Editor",
                "--app-version", project.version,
                "--vendor", "PryosCode",
                "--copyright", "Copyright 2021 PryosCode",
                "--type", "exe",
                "--main-class", project.group + "." + project.name.toLowerCase() + ".Main",
                "--icon", "src\\main\\resources\\img\\icon.ico",
                "--license-file", "src\\main\\resources\\license.txt",
                "--win-dir-chooser",
                "--win-shortcut",
                "--win-menu",
                "--win-menu-group", "PryosCode",
                "--win-upgrade-uuid", "362df9c4-52e2-4256-a184-447c20cd42e1"
    } else if (System.getProperty("os.name").toLowerCase().contains("mac")) {
        commandLine "jpackage",
                "--dest", "dist",
                "--input", "build/libs",
                "--main-jar", project.name + ".jar",
                "--name", project.name,
                "--app-version", project.version,
                "--vendor", "PryosCode",
                "--copyright", "Copyright 2021 PryosCode",
                "--type", "dmg",
                "--main-class", project.group + "." + project.name.toLowerCase() + ".Main",
                "--icon", "src/main/resources/img/icon.icns",
                "--license-file", "src/main/resources/license.txt"
    } else {
        commandLine "jpackage",
                "--dest", "dist",
                "--input", "build/libs",
                "--main-jar", project.name + ".jar",
                "--name", project.name,
                "--app-version", project.version,
                "--vendor", "PryosCode",
                "--copyright", "Copyright 2021 PryosCode",
                "--type", "deb",
                "--main-class", project.group + "." + project.name.toLowerCase() + ".Main",
                "--icon", "src/main/resources/img/icon.png",
                "--license-file", "src/main/resources/license.txt",
                "--linux-shortcut",
                "--linux-menu-group", "PryosCode",
                "--linux-deb-maintainer", "info@pryoscode.net"
    }
}

javafx {
    version = myJavaVersion
    modules = [ "javafx.controls" ]
}

dependencies {
    implementation group: "com.google.code.gson", name: "gson", version: "2.8.9"
    implementation group: "org.fxmisc.richtext", name: "richtextfx", version: "0.10.7"
    implementation group: "org.kordamp.ikonli", name: "ikonli-core", version: "12.2.0"
    implementation group: "org.kordamp.ikonli", name: "ikonli-javafx", version: "12.2.0"
    implementation group: "org.kordamp.ikonli", name: "ikonli-fontawesome-pack", version: "12.2.0"

}