import org.panteleyev.jpackage.ImageType

plugins {
    id "java"
    id "io.freefair.lombok" version "6.5.0.2"
    id "org.openjfx.javafxplugin" version "0.0.13"
    id "org.panteleyev.jpackageplugin" version "1.3.1"
}

group "dev.shota"
version VERSION

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

javafx {
    version = JavaVersion.VERSION_18
    modules "javafx.base", "javafx.controls", "javafx.fxml", "javafx.graphics", "javafx.swing"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":api")
    implementation group: "org.slf4j", name: "slf4j-api", version: "1.7.36"
    implementation group: "org.apache.logging.log4j", name: "log4j-api", version: "2.17.2"
    implementation group: "org.apache.logging.log4j", name: "log4j-core", version: "2.17.2"
    implementation group: "org.apache.logging.log4j", name: "log4j-slf4j-impl", version: "2.17.2"
    implementation group: "com.formdev", name: "flatlaf", version: "2.3"
    implementation group: "com.fasterxml.jackson.core", name: "jackson-core", version: "2.13.3"
    implementation group: "org.controlsfx", name: "controlsfx", version: "11.1.1"
}

jar {
    archiveFileName = project.name.toLowerCase() + ".jar"
    duplicatesStrategy = "include"
    manifest.attributes "Implementation-Version": project.version
    from { configurations.compileClasspath.filter{ it.exists() }.collect { it.isDirectory() ? it : zipTree(it) } }
}

jpackage {
    appName = "${project.name} Editor"
    appVersion = project.version
    copyright = "Copyright 2021 shota"
    appDescription = "A hackable code editor."
    vendor = "shota"
    destination = "package"
    mainClass = "${project.group}.${project.name.toLowerCase()}.Main"
    mainJar = jar.archiveFileName.get()
    fileAssociations = List.of("${sourceSets.getByName("main").resources.srcDirs[0]}/associations/text.properties")
    input = "$buildDir/libs"
    licenseFile = "${sourceSets.getByName("main").resources.srcDirs[0]}/license.txt"
    winMenu = true
    winDirChooser = true
    winUpgradeUuid = "362df9c4-52e2-4256-a184-447c20cd42e1"
    winMenuGroup = "shota"
    winShortcut= true
    linuxMenuGroup = "shota"
    linuxShortcut = true

    windows {
        type = ImageType.EXE
        icon = "${sourceSets.getByName("main").resources.srcDirs[0]}/icon/icon.ico"
    }
    mac {
        type = ImageType.DMG
        icon = "${sourceSets.getByName("main").resources.srcDirs[0]}/icon/icon.icns"
    }
    linux {
        type = ImageType.APP_IMAGE
        icon = "${sourceSets.getByName("main").resources.srcDirs[0]}/icon/icon.png"
    }
}

clean {
    dependsOn ":api:clean"
    delete "package"
}